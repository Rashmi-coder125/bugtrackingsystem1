{"filter":false,"title":"views.py","tooltip":"/bugtrackproject/src/bugtrackapp/views.py","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":40,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":41,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":41,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["from django.contrib.auth.mixins import LoginRequiredMixin","","class BugCreateView(LoginRequiredMixin, CreateView):","    model = Bug","    fields = ['title', 'description', 'status', 'project']","    template_name = 'bug_form.html'","    success_url = '/bugs/'","","    def form_valid(self, form):","        form.instance.reported_by = self.request.user","        return super().form_valid(form)","","# Similarly, update other views as needed",""],"id":3}],[{"start":{"row":56,"column":0},"end":{"row":56,"column":1},"action":"insert","lines":["/"],"id":4}],[{"start":{"row":56,"column":0},"end":{"row":56,"column":1},"action":"remove","lines":["/"],"id":5}],[{"start":{"row":56,"column":0},"end":{"row":56,"column":1},"action":"insert","lines":["'"],"id":6},{"start":{"row":56,"column":1},"end":{"row":56,"column":2},"action":"insert","lines":["'"]},{"start":{"row":56,"column":2},"end":{"row":56,"column":3},"action":"insert","lines":["'"]},{"start":{"row":56,"column":3},"end":{"row":56,"column":4},"action":"insert","lines":["'"]}],[{"start":{"row":56,"column":3},"end":{"row":56,"column":4},"action":"remove","lines":["'"],"id":7}],[{"start":{"row":131,"column":0},"end":{"row":131,"column":2},"action":"insert","lines":["''"],"id":8}],[{"start":{"row":131,"column":2},"end":{"row":131,"column":3},"action":"insert","lines":["'"],"id":9},{"start":{"row":131,"column":3},"end":{"row":131,"column":4},"action":"insert","lines":["'"]}],[{"start":{"row":131,"column":3},"end":{"row":131,"column":4},"action":"remove","lines":["'"],"id":10}],[{"start":{"row":0,"column":0},"end":{"row":131,"column":3},"action":"remove","lines":["from django.shortcuts import render, redirect","from django.contrib import messages","import boto3","from .forms import CropUpdateForm","from django.contrib.auth import login, authenticate","from .forms import SignUpForm","from django.utils import timezone","from .models import Crop","from django.contrib.auth.decorators import login_required","","","def signup(request):","    if request.method == 'POST':","        form = SignUpForm(request.POST)","        if form.is_valid():","            form.save()","            username = form.cleaned_data.get('username')","            raw_password = form.cleaned_data.get('password1')","            user = authenticate(username=username, password=raw_password) #user auhentication with username and password","            login(request, user)","            return redirect('login')  # Redirect to login page","    else:","        form = SignUpForm()","    return render(request, 'signup.html', {'form': form})","","def login_view(request):","    if request.method == 'POST':","        username = request.POST.get('username')","        password = request.POST.get('password')","        user = authenticate(request, username=username, password=password)","        ","        if user is not None:","            login(request, user)","            # Redirect to a home page.","            return redirect('home')  ","        else:","            messages.error(request, \"Invalid username or password.\")","","    return render(request, 'home.html')  # redirecting to 'home.html'","","","from django.contrib.auth.mixins import LoginRequiredMixin","","class BugCreateView(LoginRequiredMixin, CreateView):","    model = Bug","    fields = ['title', 'description', 'status', 'project']","    template_name = 'bug_form.html'","    success_url = '/bugs/'","","    def form_valid(self, form):","        form.instance.reported_by = self.request.user","        return super().form_valid(form)","","# Similarly, update other views as needed","","","'''@login_required(login_url='/login/')","def home(request):","    title = 'Welcome....!!!'","    context = {\"title\": title}","    return render(request, \"home.html\", context)","","","@login_required(login_url='/login/')","def list_crop(request):","    title = 'List of Crops'","    queryset = Crop.objects.filter(user=request.user)  # Show crops added by the logged-in user only","    context = {\"title\": title, \"queryset\": queryset}","    return render(request, \"list_crop.html\", context)  ","","@login_required(login_url='/login/')","def add_crop(request):","    if request.method == 'POST':","        form = CropUpdateForm(request.POST)","        if form.is_valid():","            crop = form.save(commit=False)","            crop.user = request.user  # Associate crop with logged-in user","            crop.save()","            messages.success(request, 'Successfully added')","            return redirect('/list_crop')","    else:","        form = CropUpdateForm()","","    context = {\"form\": form, \"title\": \"Add Crop\"}","    return render(request, \"add_crop.html\", context)  ","","@login_required(login_url='/login/')","def update_crop(request, pk):","    queryset = Crop.objects.get(id=pk, user=request.user)  ","    if request.method == 'POST':","        form = CropUpdateForm(request.POST, instance=queryset)","        if form.is_valid():","            form.save()","            messages.success(request, 'Successfully updated')","            return redirect('/list_crop')","    else:","        form = CropUpdateForm(instance=queryset)","","    context = {'form': form, 'title': 'Update Crop'}","    return render(request, 'add_crop.html', context)  ","","@login_required(login_url='/login/')","def delete_crop(request, pk):","    queryset = Crop.objects.get(id=pk, user=request.user)  ","    if request.method == 'POST':","        crop_name = queryset.name  # Get the name of the item","        deletion_time = timezone.now()  # Get the current time","        queryset.delete()","        messages.success(request, 'Successfully deleted crop data')","         # Preparing the SNS message here","        sns_message = (","            f\"Dear User,\\n\\n\"","            f\"We would like to inform you that the following crop data has been successfully deleted from our system:\\n\\n\"","            f\"- Crop Name: {crop_name}\\n\"","            f\"- Deletion Time: {deletion_time.strftime('%Y-%m-%d %H:%M:%S')}\\n\\n\"","            f\"This action was performed in accordance with our data management policies and user requests. If this deletion was not initiated by you or if you have any concerns regarding this action, please contact us immediately.\\n\\n\"","            f\"We appreciate your attention to this matter and are committed to maintaining the integrity and accuracy of our crop data management system.\\n\\n\"","         ","        )","","        # Send SNS Notification","        sns_client = boto3.client('sns', region_name='us-east-1')","        sns_client.publish(","            TopicArn='arn:aws:sns:us-east-1:087976260153:22208038-cpp', #SNS TopicArn from AWS Learner Lab","            Message=sns_message,","            Subject='Crop Data Deletion Notification' #Subject of the Email","        )","        return redirect('/list_crop')","","    context = {\"title\": \"Are you sure you want to delete?\", \"crop_name\": queryset.name}","    return render(request, 'delete_crop.html', context)  ","'''"],"id":11},{"start":{"row":0,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["from django.views.generic import ListView, DetailView, CreateView, UpdateView, DeleteView","from .models import Bug","","class BugListView(ListView):","    model = Bug","    template_name = 'bug_list.html'","","class BugDetailView(DetailView):","    model = Bug","    template_name = 'bug_detail.html'","","class BugCreateView(CreateView):","    model = Bug","    fields = ['title', 'description', 'status', 'project']","    template_name = 'bug_form.html'","    success_url = '/bugs/'","","class BugUpdateView(UpdateView):","    model = Bug","    fields = ['title', 'description', 'status', 'project']","    template_name = 'bug_update.html'","    success_url = '/bugs/'","","class BugDeleteView(DeleteView):","    model = Bug","    template_name = 'bug_confirm_delete.html'","    success_url = '/bugs/'",""]}],[{"start":{"row":26,"column":26},"end":{"row":27,"column":0},"action":"remove","lines":["",""],"id":12}]]},"ace":{"folds":[],"scrolltop":146.20000000000005,"scrollleft":0,"selection":{"start":{"row":25,"column":45},"end":{"row":25,"column":45},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":9,"state":"start","mode":"ace/mode/python"}},"timestamp":1701890807387,"hash":"0d475967efb853aa807d4593305e56dfd0b4c801"}